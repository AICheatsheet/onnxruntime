jobs:
- template: templates/linux-ci.yml
  parameters:
    AgentPool : 'Linux-CPU'
    JobName: 'Linux_CI_Dev'
    BuildCommand: 'tools/ci_build/github/linux/run_dockerbuild.sh -o ubuntu16.04 -d cpu -r $(Build.BinariesDirectory) -x "--use_mklml --use_llvm --use_nuphar --use_dnnl --use_tvm --build_wheel --build_java --enable_language_interop_ops --use_featurizers --wheel_name_suffix featurizers"'
    DoNugetPack:  'false'
    ArtifactName: 'drop-linux'
    TimeoutInMinutes: 120

- job: linux_centos_ci
  timeoutInMinutes:  60
  workspace:
    clean: all
  pool: 'Linux-CPU'
  strategy:
    maxParallel: 2
    matrix:
      Debug:
        BuildType: Debug
      Release:
        BuildType: Release
  steps:
    - task: CmdLine@2
      inputs:
        script: |
          docker build --pull -t onnxruntime-centos7 --build-arg BUILD_USER=onnxruntimedev --build-arg BUILD_UID=$(id -u) --build-arg PYTHON_VERSION=3.6 -f Dockerfile.centos .
        workingDirectory: $(Build.SourcesDirectory)/tools/ci_build/github/linux/docker
    - task: CmdLine@2
      inputs:
        script: |
          docker run --rm --volume $(Build.SourcesDirectory):/onnxruntime_src --volume $(Build.BinariesDirectory):/build -e NIGHTLY_BUILD onnxruntime-centos7 /usr/bin/python3 /onnxruntime_src/tools/ci_build/build.py --build_dir /build --config $(BuildType) --skip_submodule_sync --parallel --build_shared_lib --use_openmp --build_wheel
        workingDirectory: $(Build.SourcesDirectory)